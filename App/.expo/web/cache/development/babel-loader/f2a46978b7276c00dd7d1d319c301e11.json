{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/nafisabrar/Documents/Projects/Fashion App/weardrobe/App/Screens/ProfileTab/SignupScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport 'react-native-gesture-handler';\nimport React, { useEffect, useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport ScreenStyle from \"../../Styles/ScreenStyle\";\nexport default function SignupScreen() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  return React.createElement(View, {\n    style: _objectSpread({}, styles.container, {}, ScreenStyle),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.formLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \" Sign up Form \"), React.createElement(TextInput, {\n    placeholder: \"Name\",\n    style: styles.inputStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Phone\",\n    style: styles.inputStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Birthday\",\n    style: styles.inputStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Enter Email\",\n    style: styles.inputStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    secureTextEntry: true,\n    placeholder: \"Enter Password\",\n    style: styles.inputStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    secureTextEntry: true,\n    placeholder: \"Confirm Password\",\n    style: styles.inputStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    title: \"Sign up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 50\n  },\n  formLabel: {\n    fontSize: 20,\n    color: '#fff'\n  },\n  inputStyle: {\n    marginTop: 20,\n    width: 300,\n    height: 40,\n    paddingHorizontal: 10,\n    borderRadius: 50,\n    backgroundColor: '#DCDCDC'\n  },\n  formText: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: '#fff',\n    fontSize: 20\n  },\n  text: {\n    color: '#fff',\n    fontSize: 20\n  },\n  buttons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    marginTop: 100,\n    width: 200\n  }\n});","map":{"version":3,"sources":["/Users/nafisabrar/Documents/Projects/Fashion App/weardrobe/App/Screens/ProfileTab/SignupScreen.js"],"names":["React","useEffect","useState","NavigationContainer","createStackNavigator","createDrawerNavigator","ScreenStyle","SignupScreen","value","setValue","styles","container","formLabel","inputStyle","buttons","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","fontSize","color","marginTop","width","paddingHorizontal","borderRadius","formText","text","flexDirection"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React, { useEffect, useState } from 'react';\nimport { TextInput, Button, StyleSheet, Text, View, Image, ScrollView } from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport ScreenStyle from '../../Styles/ScreenStyle';\n\n\nexport default function SignupScreen() {\n    const [value, setValue] = useState(0);\n  return (\n    <View style={{\n        ...styles.container,\n        ...ScreenStyle\n\n      }}>\n      \n      <View>\n        <Text style={styles.formLabel}> Sign up Form </Text>\n        <TextInput placeholder=\"Name\" style={styles.inputStyle} />\n        <TextInput placeholder=\"Phone\" style={styles.inputStyle} />\n        <TextInput placeholder=\"Birthday\" style={styles.inputStyle} />\n        <TextInput placeholder=\"Enter Email\" style={styles.inputStyle} />\n        <TextInput\n          secureTextEntry={true}\n          placeholder=\"Enter Password\"\n          style={styles.inputStyle}\n        />\n        <TextInput\n          secureTextEntry={true}\n          placeholder=\"Confirm Password\"\n          style={styles.inputStyle}\n        />\n      </View>\n\n      <View style={styles.buttons}>\n        <Button title=\"Login\"/>\n        <Button title=\"Sign up\"/>\n      </View>\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 50,\n  },\n\n  formLabel: {\n    fontSize: 20,\n    color: '#fff',\n  },\n  inputStyle: {\n    marginTop: 20,\n    width: 300,\n    height: 40,\n    paddingHorizontal: 10,\n    borderRadius: 50,\n    backgroundColor: '#DCDCDC',\n  },\n  formText: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: '#fff',\n    fontSize: 20,\n  },\n  text: {\n    color: '#fff',\n    fontSize: 20,\n  },\n  buttons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n    marginTop: 100,\n    width: 200\n    }\n});"]},"metadata":{},"sourceType":"module"}