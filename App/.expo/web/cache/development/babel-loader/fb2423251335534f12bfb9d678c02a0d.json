{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/nafisabrar/Documents/Projects/Fashion App/weardrobe/App/Screens/ProfileTab/ProfileScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport 'react-native-gesture-handler';\nimport React, { useEffect } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer, TabActions } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { useSelector, useDispatch } from 'react-redux';\nimport BlogListScreen from \"./BlogListScreen\";\nimport LoginScreen from \"./LoginScreen\";\nimport SignupScreen from \"./SignupScreen\";\nimport GenericHeaderButton from \"../../components/GenericHeaderButton\";\nimport ProfileSettingsScreen from \"./ProfileSettingsScreen\";\nimport FollowersListTabScreen from \"./FollowersListScreen\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport CreateBlogScreen1 from \"./CreateBlogScreen1\";\nimport CreateBlogScreen2 from \"./CreateBlogScreen2\";\nimport CreateBlogScreen3 from \"./CreateBlogScreen3\";\nimport BlogScreen from \"./BlogScreen\";\nimport HeaderOptions from \"../../Styles/HeaderOptions\";\nexport function ProfileScreen(props) {\n  return React.createElement(View, {\n    style: ScreenStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \" Profile Screen\"));\n}\nexport function ProfileTabsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var TopTab = createMaterialTopTabNavigator();\n  return React.createElement(View, {\n    style: _objectSpread({}, ScreenStyle, {\n      flex: 1\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      height: 150\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'column',\n      marginLeft: 40,\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 100,\n      width: 100\n    },\n    source: require(\"../../assets/Images/face.png\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \" Stick Man\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \" Hi! \")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('FollowersListTab');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'column',\n      height: 80,\n      marginRight: 40,\n      justifyContent: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Followers: 1,000,000\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }\n  }, \"Following: 0\")))), React.createElement(TopTab.Navigator, {\n    tabBarOptions: {\n      indicatorStyle: {\n        backgroundColor: 'green'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, React.createElement(TopTab.Screen, {\n    name: \"ProfileStack\",\n    component: ProfileScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), React.createElement(TopTab.Screen, {\n    name: \"BlogListScreen\",\n    component: BlogListScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })));\n}\nexport default function ProfileStackScreen(props) {\n  var ProfileStack = createStackNavigator();\n  return React.createElement(ProfileStack.Navigator, {\n    screenOptions: HeaderOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"ProfileScreen\",\n    component: ProfileTabsScreen,\n    options: {\n      headerRight: function headerRight() {\n        return React.createElement(GenericHeaderButton, {\n          title: \"SettingButton\",\n          iconName: \"md-settings\",\n          onPress: function onPress() {\n            return props.navigation.navigate('ProfileSettings');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 21\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), React.createElement(ProfileStack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), React.createElement(ProfileStack.Screen, {\n    name: \"Signup\",\n    component: SignupScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), React.createElement(ProfileStack.Screen, {\n    name: \"ProfileSettings\",\n    component: ProfileSettingsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), React.createElement(ProfileStack.Screen, {\n    name: \"FollowersListTab\",\n    component: FollowersListTabScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), React.createElement(ProfileStack.Screen, {\n    name: \"CreateBlog1\",\n    component: CreateBlogScreen1,\n    options: {\n      headerRight: function headerRight() {\n        return React.createElement(GenericHeaderButton, {\n          name: \"CreateBlogButton1\",\n          iconName: \"md-arrow-forward\",\n          onPress: function onPress() {\n            return props.navigation.navigate('CreateBlog2');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }), React.createElement(ProfileStack.Screen, {\n    name: \"CreateBlog2\",\n    component: CreateBlogScreen2,\n    options: {\n      headerRight: function headerRight() {\n        return React.createElement(GenericHeaderButton, {\n          name: \"CreateBlogButton2\",\n          iconName: \"md-arrow-forward\",\n          onPress: function onPress() {\n            return props.navigation.navigate('CreateBlog3');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }), React.createElement(ProfileStack.Screen, {\n    name: \"CreateBlog3\",\n    component: CreateBlogScreen3,\n    options: {\n      headerRight: function headerRight() {\n        return React.createElement(GenericHeaderButton, {\n          name: \"CreateBlogButton3\",\n          iconName: \"md-arrow-forward\",\n          onPress: function onPress() {\n            return props.navigation.popToTop();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), React.createElement(ProfileStack.Screen, {\n    name: \"BlogScreen\",\n    component: BlogScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/nafisabrar/Documents/Projects/Fashion App/weardrobe/App/Screens/ProfileTab/ProfileScreen.js"],"names":["React","useEffect","NavigationContainer","TabActions","createStackNavigator","createBottomTabNavigator","createDrawerNavigator","createMaterialTopTabNavigator","useSelector","useDispatch","BlogListScreen","LoginScreen","SignupScreen","GenericHeaderButton","ProfileSettingsScreen","FollowersListTabScreen","TouchableOpacity","CreateBlogScreen1","CreateBlogScreen2","CreateBlogScreen3","BlogScreen","HeaderOptions","ProfileScreen","props","ScreenStyle","ProfileTabsScreen","navigation","TopTab","flex","flexDirection","justifyContent","height","marginLeft","alignItems","width","require","navigate","marginRight","indicatorStyle","backgroundColor","ProfileStackScreen","ProfileStack","headerRight","popToTop"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React, { useEffect } from 'react';\nimport { TextInput, Button, StyleSheet, Text, View, Image } from 'react-native';\nimport {NavigationContainer, TabActions} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs'\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\n\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport BlogListScreen from './BlogListScreen'\nimport LoginScreen from './LoginScreen'\nimport SignupScreen from './SignupScreen'\nimport GenericHeaderButton from '../../components/GenericHeaderButton'\nimport ProfileSettingsScreen from './ProfileSettingsScreen';\nimport FollowersListTabScreen from './FollowersListScreen'\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport CreateBlogScreen1 from './CreateBlogScreen1';\nimport CreateBlogScreen2 from './CreateBlogScreen2';\nimport CreateBlogScreen3 from './CreateBlogScreen3';\nimport BlogScreen from './BlogScreen';\nimport HeaderOptions from '../../Styles/HeaderOptions';\n\n\n\n\nexport function ProfileScreen(props) {\n    return (\n        <View style={ScreenStyle}>\n            <Text> Profile Screen</Text>\n            \n        </View>\n    );\n\n}\n\nexport function ProfileTabsScreen({navigation}) {\n    const TopTab = createMaterialTopTabNavigator();\n\n    return(\n        <View style={{ ...ScreenStyle, flex: 1}}>\n            <View style={{flexDirection: 'row', justifyContent: 'space-between', height: 150}}>\n                <View style={{flexDirection: 'column', marginLeft: 40, alignItems: 'center'}}>\n                    <Image style={{height: 100, width: 100}}source={require('../../assets/Images/face.png') }/>\n\n                    <Text> Stick Man</Text>\n                    <Text> Hi! </Text>\n\n                </View>\n                <TouchableOpacity onPress={ () => navigation.navigate('FollowersListTab')}>\n                    <View style={{flexDirection: 'column', height: 80, marginRight: 40, justifyContent: 'center'}}>\n                        <Text>Followers: 1,000,000</Text>\n                        <Text>Following: 0</Text>\n                        \n                    </View>\n                </TouchableOpacity>\n                \n            </View>\n            <TopTab.Navigator\n                tabBarOptions={{\n                    indicatorStyle: {\n                        backgroundColor: 'green'\n                    }\n                }}\n            >\n                <TopTab.Screen name=\"ProfileStack\" component={ProfileScreen} />\n                <TopTab.Screen name=\"BlogListScreen\" component={BlogListScreen} />\n            </TopTab.Navigator>\n        </View>\n            \n        \n        // <View>\n        //     <Text> jello</Text>\n        // </View>\n    )\n}\n\n\nexport default function ProfileStackScreen(props) {\n    const ProfileStack = createStackNavigator();\n    return (\n        <ProfileStack.Navigator\n            screenOptions={HeaderOptions}\n        >\n            <ProfileStack.Screen name=\"ProfileScreen\" component={ProfileTabsScreen} options = {{\n                headerRight: () => (\n                    <GenericHeaderButton title=\"SettingButton\" iconName=\"md-settings\" onPress={() => props.navigation.navigate('ProfileSettings')} />\n                )\n            }}/>\n\n            <ProfileStack.Screen name=\"Login\" component={LoginScreen}/>\n            <ProfileStack.Screen name=\"Signup\" component={SignupScreen}/>\n            <ProfileStack.Screen name=\"ProfileSettings\" component={ProfileSettingsScreen}/>\n            <ProfileStack.Screen name=\"FollowersListTab\" component={FollowersListTabScreen}/>\n            <ProfileStack.Screen name=\"CreateBlog1\" component={CreateBlogScreen1} options={{\n                headerRight: () => (\n                    <GenericHeaderButton name=\"CreateBlogButton1\" iconName=\"md-arrow-forward\" onPress={() => props.navigation.navigate('CreateBlog2')} />\n                )\n            }}/>\n            <ProfileStack.Screen name=\"CreateBlog2\" component={CreateBlogScreen2} options={{\n                headerRight: () => (\n                    <GenericHeaderButton name=\"CreateBlogButton2\" iconName=\"md-arrow-forward\" onPress={() => props.navigation.navigate('CreateBlog3')} />\n                )\n            }}/>\n            <ProfileStack.Screen name=\"CreateBlog3\" component={CreateBlogScreen3} options={{\n                headerRight: () => (\n                    <GenericHeaderButton name=\"CreateBlogButton3\" iconName=\"md-arrow-forward\" onPress={() => props.navigation.popToTop()} />\n                )\n            }}/>\n            <ProfileStack.Screen name=\"BlogScreen\" component={BlogScreen}/>\n        </ProfileStack.Navigator>\n        \n    )\n}"]},"metadata":{},"sourceType":"module"}