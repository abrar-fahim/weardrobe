{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/nafisabrar/Documents/Projects/Fashion App/weardrobe/App/Screens/MagazineTab/MagazineScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport 'react-native-gesture-handler';\nimport React, { useEffect } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { Ionicons, Entypo, FontAwesome, MaterialIcons, AntDesign, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { FEEDITEMS } from \"../../dummy-data/Feed\";\nimport { TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\nimport NewPostChooseLayout from \"./NewPostChooseLayoutScreen\";\nimport NewPostButton from \"../../components/NewPostButton\";\nimport NewPostScreen2 from \"./NewPostScreen2\";\nimport NewPostScreen3 from \"./NewPostScreen3\";\nimport NewPostTagScreen from \"./NewPostTagScreen\";\nimport NewPostNextButton from \"../../components/NewPostNextButton\";\nimport { ProfileTabsScreen } from \"../ProfileTab/ProfileScreen\";\nimport GenericHeaderButton from \"../../components/GenericHeaderButton\";\nimport Colors from \"../../Styles/Colors\";\nimport HeaderOptions from \"../../Styles/HeaderOptions\";\nimport ScreenStyle from \"../../Styles/ScreenStyle\";\nexport function MagazineScreen(props) {\n  var renderFeedItem = function renderFeedItem(itemData) {\n    return React.createElement(View, {\n      style: styles.gridItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return props.navigation.navigate('OthersProfile');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    }, React.createElement(Image, {\n      style: {\n        width: 20,\n        height: 20\n      },\n      source: require(\"../../assets/Images/face.png\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }\n    }), React.createElement(Text, {\n      style: {\n        fontWeight: 'bold',\n        fontSize: 17\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, \" Stickman \")))), React.createElement(TouchableOpacity, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      source: itemData.item.picture,\n      style: {\n        height: 120,\n        width: 300\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }), React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, \" \", itemData.item.caption))), React.createElement(View, {\n      style: {\n        flexDirection: 'row',\n        justifyContent: 'space-around'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      name: \"hand-okay\",\n      size: 35,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    })), React.createElement(TextInput, {\n      placeholder: \"Comment\",\n      style: {\n        borderColor: 'purple',\n        height: 40,\n        width: 200,\n        backgroundColor: 'grey'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    })));\n  };\n\n  return React.createElement(View, {\n    style: ScreenStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: FEEDITEMS,\n    renderItem: renderFeedItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }));\n}\nexport default function MagazineStackScreen(_ref) {\n  var navigation = _ref.navigation;\n  var MagazineStack = createStackNavigator();\n  return React.createElement(MagazineStack.Navigator, {\n    screenOptions: _objectSpread({}, HeaderOptions),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, React.createElement(MagazineStack.Screen, {\n    name: \"Magazine\",\n    component: MagazineScreen,\n    options: {\n      headerRight: function headerRight() {\n        return React.createElement(NewPostButton, {\n          onPress: function onPress() {\n            return navigation.navigate('NewPostChooseLayout');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 37\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), React.createElement(MagazineStack.Screen, {\n    name: \"NewPostChooseLayout\",\n    component: NewPostChooseLayout,\n    options: {\n      headerRight: function headerRight() {\n        return React.createElement(GenericHeaderButton, {\n          title: \"newPost\",\n          iconName: \"md-create\",\n          onPress: function onPress() {\n            return navigation.navigate('NewPost2');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), React.createElement(MagazineStack.Screen, {\n    name: \"NewPost2\",\n    component: NewPostScreen2,\n    options: {\n      headerRight: function headerRight() {\n        return React.createElement(NewPostNextButton, {\n          onPress: function onPress() {\n            return navigation.navigate('NewPost3');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), React.createElement(MagazineStack.Screen, {\n    name: \"NewPost3\",\n    component: NewPostScreen3,\n    options: {\n      headerRight: function headerRight() {\n        return React.createElement(NewPostNextButton, {\n          navigation: navigation,\n          onPress: function onPress() {\n            return navigation.popToTop();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 38\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), React.createElement(MagazineStack.Screen, {\n    name: \"NewPostTag\",\n    component: NewPostTagScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), React.createElement(MagazineStack.Screen, {\n    name: \"OthersProfile\",\n    component: ProfileTabsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = {\n  gridItem: {\n    flex: 1,\n    margin: 15,\n    height: 300,\n    flexDirection: 'column'\n  }\n};","map":{"version":3,"sources":["/Users/nafisabrar/Documents/Projects/Fashion App/weardrobe/App/Screens/MagazineTab/MagazineScreen.js"],"names":["React","useEffect","NavigationContainer","createStackNavigator","createBottomTabNavigator","createDrawerNavigator","Ionicons","Entypo","FontAwesome","MaterialIcons","AntDesign","MaterialCommunityIcons","FEEDITEMS","TouchableHighlight","TouchableOpacity","NewPostChooseLayout","NewPostButton","NewPostScreen2","NewPostScreen3","NewPostTagScreen","NewPostNextButton","ProfileTabsScreen","GenericHeaderButton","Colors","HeaderOptions","ScreenStyle","MagazineScreen","props","renderFeedItem","itemData","styles","gridItem","navigation","navigate","flexDirection","width","height","require","fontWeight","fontSize","justifyContent","alignItems","item","picture","caption","borderColor","backgroundColor","MagazineStackScreen","MagazineStack","headerRight","popToTop","flex","margin"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React, { useEffect } from 'react';\nimport { TextInput, Button, StyleSheet, Text, View, Image, FlatList } from 'react-native';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs'\nimport { createDrawerNavigator } from '@react-navigation/drawer';\n\nimport { Ionicons, Entypo, FontAwesome, MaterialIcons, AntDesign, MaterialCommunityIcons } from '@expo/vector-icons';\n\nimport {FEEDITEMS} from '../../dummy-data/Feed'\nimport { TouchableHighlight, TouchableOpacity } from 'react-native-gesture-handler';\nimport NewPostChooseLayout from './NewPostChooseLayoutScreen';\nimport NewPostButton from '../../components/NewPostButton';\nimport NewPostScreen2 from './NewPostScreen2';\nimport NewPostScreen3 from './NewPostScreen3';\nimport NewPostTagScreen from './NewPostTagScreen';\nimport NewPostNextButton from '../../components/NewPostNextButton';\nimport { ProfileTabsScreen } from '../ProfileTab/ProfileScreen';\nimport GenericHeaderButton from '../../components/GenericHeaderButton';\nimport Colors from '../../Styles/Colors'\nimport HeaderOptions from '../../Styles/HeaderOptions'\nimport ScreenStyle from '../../Styles/ScreenStyle';\n\n\n\n\nexport function MagazineScreen(props) {\n\n    const renderFeedItem = (itemData) => {\n        return (\n            <View style={styles.gridItem} >\n                <View>\n                    <TouchableOpacity onPress={() => props.navigation.navigate('OthersProfile')}>\n                        <View style={{flexDirection: 'row'}}>\n                            <Image style={{width: 20, height: 20}} source={require('../../assets/Images/face.png')}/>\n                            <Text style={{fontWeight: 'bold', fontSize: 17}}> Stickman </Text>\n                        </View>\n                    </TouchableOpacity>\n                    \n                    \n                    \n                </View>\n                <TouchableOpacity>\n                    <View style={{justifyContent: 'center', alignItems: 'center', flexDirection: 'column'}}>\n                        <Image  source={itemData.item.picture} style={{height: 120, width: 300}}/>\n                        <Text> {itemData.item.caption}</Text>\n                    </View>\n                </TouchableOpacity>\n               \n                <View style={{flexDirection: 'row', justifyContent: 'space-around'}}>\n                    <TouchableOpacity onPress={ () => {}}>\n                    <MaterialCommunityIcons name=\"hand-okay\" size={35} />\n                        </TouchableOpacity>\n    \n                    <TextInput placeholder=\"Comment\" style={{borderColor: 'purple', height: 40, width: 200, backgroundColor: 'grey'}}/>\n                </View>\n                \n               \n            </View>\n    \n        )\n    }\n    return (\n        <View style={ScreenStyle}>\n            \n            <FlatList \n                data={FEEDITEMS}\n                renderItem={renderFeedItem}\n            />\n            \n        </View>\n    );\n\n}\n\nexport default function MagazineStackScreen({navigation}) {\n    const MagazineStack = createStackNavigator();\n    return (\n        <MagazineStack.Navigator\n            screenOptions={{\n                ...HeaderOptions\n            }}\n        >\n            <MagazineStack.Screen name=\"Magazine\" component={MagazineScreen} options = {{\n                \n                headerRight: () => (< NewPostButton onPress={() => navigation.navigate('NewPostChooseLayout')} />)\n            }}/>\n            <MagazineStack.Screen name=\"NewPostChooseLayout\" component={NewPostChooseLayout} options = {{\n                headerRight: () => (<GenericHeaderButton title=\"newPost\" iconName=\"md-create\" onPress={() => navigation.navigate('NewPost2')} />),    \n            }}/>\n            <MagazineStack.Screen name=\"NewPost2\" component={NewPostScreen2} options = {{\n                 headerRight: () => (<NewPostNextButton onPress={() => navigation.navigate('NewPost3')} />),\n                 \n            }}/>\n            <MagazineStack.Screen name=\"NewPost3\" component={NewPostScreen3} options = {{\n                 headerRight: () => (<NewPostNextButton navigation={navigation} onPress={() => navigation.popToTop()} />)\n            }}/>\n            <MagazineStack.Screen name=\"NewPostTag\" component={NewPostTagScreen}/>\n            <MagazineStack.Screen name=\"OthersProfile\" component={ProfileTabsScreen}/>\n\n        </MagazineStack.Navigator>\n        \n    )\n}\n\n\nconst styles = {\n    gridItem: {\n        flex: 1,\n        margin: 15,\n        height: 300,\n        flexDirection: 'column'\n    },\n}"]},"metadata":{},"sourceType":"module"}